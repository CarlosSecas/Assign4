     1                                  ;Library function isnan
     2                                  ;Stored in filel isnan.asm
     3                                  ;Author: unknown:
     4                                  ;Source: public domain website
     5                                  ;Function name: isnan0     ;This avoids conflict with existing function with name isnan.
     6                                  
     7                                  ;Strategy: Online information about ucomisd states that if either of the two operands
     8                                  ;of ucomisd are nans then ucomisd set 1 into flag PF and will clear flag PF to 0 if 
     9                                  ;both operands are normal numbers (not nans).
    10                                  
    11                                  global isnan0
    12                                  extern printf
    13                                  
    14                                  segment .data
    15                                     ;empty
    16                                     ;The next declaration is for debug purposes.  Remove it after testing this function.
    17 00000000 5468652076616C7565-        intform db "The value to be returned is %ld",10,0
    17 00000009 20746F206265207265-
    17 00000012 7475726E6564206973-
    17 0000001B 20256C640A00       
    18                                  segment .bss
    19                                     ;empty
    20                                  segment .text
    21                                     isnan0:
    22                                  ;Back up the GPRs (General Purpose Registers)
    23 00000000 55                      push rbp
    24 00000001 4889E5                  mov rbp, rsp
    25 00000004 53                      push rbx
    26 00000005 51                      push rcx
    27 00000006 52                      push rdx
    28 00000007 57                      push rdi
    29 00000008 56                      push rsi
    30 00000009 4150                    push r8
    31 0000000B 4151                    push r9
    32 0000000D 4152                    push r10
    33 0000000F 4153                    push r11
    34 00000011 4154                    push r12
    35 00000013 4155                    push r13
    36 00000015 4156                    push r14
    37 00000017 4157                    push r15
    38 00000019 9C                      pushf
    39                                  
    40                                  ;Save a secure copy of incoming parameter
    41 0000001A F2440F10F8              movsd xmm15,xmm0
    42                                  
    43                                  ;Compare xmm15 with itself to place a value in flag pf (parity flag)
    44 0000001F 66450F2EFF              ucomisd xmm15,xmm15
    45                                  
    46                                  ;Now we need to discover what ucomisd placed into PF inside of rflags. Is it 1 or 0?
    47                                  ;Fortunately, there is an instruction that will copy the PF bit to rax, namely setp.
    48                                  
    49 00000024 0F9AC0                  setp al        ;Copy the single bit in PF to rax (lowest 8 bits)
    50                                                 ;Now rax is either 0 (normal number) or 1 (nan value)
    51 00000027 6698                    cbw            ;Extend al to ax
    52 00000029 98                      cwde           ;Extend ax to eax
    53 0000002A 4898                    cdqe           ;Extend eax to rax
    54                                  
    55                                  ;Prepare to send r15 to the caller.
    56                                  ;mov rax,r15
    57                                  
    58                                  ;Restore backed up general registers
    59 0000002C 9D                      popf
    60 0000002D 415F                    pop r15
    61 0000002F 415E                    pop r14
    62 00000031 415D                    pop r13
    63 00000033 415C                    pop r12
    64 00000035 415B                    pop r11
    65 00000037 415A                    pop r10
    66 00000039 4159                    pop r9
    67 0000003B 4158                    pop r8
    68 0000003D 5E                      pop rsi
    69 0000003E 5F                      pop rdi
    70 0000003F 5A                      pop rdx
    71 00000040 59                      pop rcx
    72 00000041 5B                      pop rbx
    73 00000042 5D                      pop rbp   ; Restore rbp to the base of the activation record of the caller program
    74 00000043 C3                      ret
    75                                  
    76                                  ;End of the isnan manager ====================================================================
